[
  {
    "id": "1610577883759783939",
    "text": "@RogerAlsing static void UntypedMethod(object obj) {\n//dynamic t = obj;\nGenerMethod(obj);\n} //works too without that trick\n//verified by a test: https://t.co/2OXmVLSoOm",
    "createdAt": "2023-01-04T10:04:25.000Z",
    "type": "replied_to",
    "author": {
      "id": "768258192446885892",
      "url": "https://t.co/mkgWQZ7w6l",
      "name": "Youtian WANG",
      "username": "WANGYOUTIAN",
      "verified": false,
      "imageUrl": "https://pbs.twimg.com/profile_images/1550151294584627201/nH_WFZ-6_normal.jpg"
    },
    "replyTo": {
      "id": "1609955500363333632",
      "text": "Here is an old C# trick that I don't think many knows about.\n\nIf you want to call into a Generic method, from a non-generic one. \nYou can ofc do that via reflection, or use Expressions or IL Emit etc.\n\nBut there is a hack that is much much simpler: `dynamic` https://t.co/JCxk3yMJLQ",
      "createdAt": "2023-01-02T16:51:17.000Z",
      "author": {
        "id": "126031206",
        "url": "https://t.co/O4C7RVOZZU",
        "name": "Roger Johansson",
        "username": "RogerAlsing",
        "verified": false,
        "imageUrl": "https://pbs.twimg.com/profile_images/1600410069413281793/0TcD8SEV_normal.jpg"
      },
      "metrics": {
        "likes": 160,
        "quotes": 2,
        "replies": 7,
        "retweets": 13
      },
      "lang": "en",
      "replySettings": "everyone",
      "media": [
        null
      ],
      "urls": [
        "https://twitter.com/RogerAlsing/status/1609955500363333632/photo/1"
      ]
    },
    "metrics": {
      "likes": 0,
      "quotes": 0,
      "replies": 1,
      "retweets": 0
    },
    "lang": "en",
    "replySettings": "everyone",
    "urls": [
      "https://github.com/nilnul/nilnul._obj_._TEST_/blob/nilnul-pub/nilnul0/_obj/_typ/gener/UnitTest1%20-%20Copy.cs"
    ]
  }
]